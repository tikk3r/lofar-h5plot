""" The spiritual successor to ParmDBplot for quickly reviewing gain solutions generated by NDPPP.
"""
__version__ = 'v3.0.0'

import logging
import sys

import losoto.h5parm as lh5

from .ui.widgets import H5PlotGUI

from PySide6.QtCore import Qt
from PySide6.QtGui import QPalette, QColor
from PySide6.QtWidgets import QApplication, QWidget

def main():
    print('H5Plot ' + __version__)
    print('Author: Frits Sweijen (frits.sweijen@gmail.com)')
    print('Released under GPLv3\n')
    import argparse
    parser = argparse.ArgumentParser(description='Interactive plotter to explore LOFAR H5parm solutions.')
    parser.add_argument('FILENAME')
    parser.add_argument("--debug", action="store_true", help="Enable DEBUG level logging.")
    args = parser.parse_args()

    H5FILE = lh5.h5parm(args.FILENAME, readonly=True)
    LOGGER = logging.getLogger('H5plot_logger')
    if args.debug:
        LOGGER.setLevel(logging.DEBUG)
    else:
        LOGGER.setLevel(logging.INFO)

    formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
    LOGFILEH = logging.FileHandler('h5plot.log')
    LOGFILEH.setLevel(logging.DEBUG)
    LOGFILEH.setFormatter(formatter)
    LOGGER.addHandler(LOGFILEH)
    LOGSTREAM = logging.StreamHandler()
    LOGSTREAM.setLevel(logging.DEBUG)
    LOGSTREAM.setFormatter(formatter)
    LOGGER.addHandler(LOGSTREAM)

    LOGGER.info('Successfully opened %s', args.FILENAME)

    SOLSETS = H5FILE.getSolsetNames()
    print('Found solset(s) ' + ', '.join(SOLSETS))
    for solset in SOLSETS:
        print('SolTabs in ' + solset + ':')
        ss = H5FILE.getSolset(solset)
        soltabs = ss.getSoltabNames()
        print('\t' + ', '.join(soltabs))

    # Now use a palette to switch to dark colors:
    palette = QPalette()
    palette.setColor(QPalette.Window, QColor(53, 53, 53))
    palette.setColor(QPalette.WindowText, Qt.white)
    palette.setColor(QPalette.Base, QColor(25, 25, 25))
    palette.setColor(QPalette.AlternateBase, QColor(53, 53, 53))
    palette.setColor(QPalette.ToolTipBase, Qt.black)
    palette.setColor(QPalette.ToolTipText, Qt.white)
    palette.setColor(QPalette.Text, Qt.white)
    palette.setColor(QPalette.Button, QColor(53, 53, 53))
    palette.setColor(QPalette.ButtonText, Qt.white)
    palette.setColor(QPalette.BrightText, Qt.red)
    palette.setColor(QPalette.Link, QColor(42, 130, 218))
    palette.setColor(QPalette.Highlight, QColor(42, 130, 218))
    palette.setColor(QPalette.HighlightedText, Qt.black)
    # Initialize the GUI.
    APP = QApplication(sys.argv)
    APP.setFont("JetBrains Mono")
    APP.setPalette(palette)
    GUI = H5PlotGUI(args.FILENAME, LOGGER)
    GUI.show()
    APP.exec_()

    H5FILE.close()
    LOGGER.info('%s successfully closed.', args.FILENAME)

if __name__ == '__main__':
    main()
