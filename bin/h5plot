#!/usr/bin/env python3
""" The spiritual successor to ParmDBplot for quickly reviewing gain solutions generated by NDPPP.
"""
__version__ = "v3.0.0"
import logging
import signal
import sys
import time

import losoto.h5parm as lh5
import matplotlib
import matplotlib.pyplot as plt
import numpy as np
from losoto.lib_operations import reorderAxes
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.backends.backend_qt5agg import NavigationToolbar2QT as NavigationToolbar
from matplotlib.figure import Figure

matplotlib.use("Qt5Agg")
plt.ion()

signal.signal(signal.SIGINT, signal.SIG_DFL)

if __name__ == "__main__":
    print("H5Plot " + __version__)
    print("Author: Frits Sweijen (frits.sweijen@gmail.com)")
    print("Released under GPLv3\n")
    import argparse

    parser = argparse.ArgumentParser(
        description="Interactive plotter to explore LOFAR H5parm solutions."
    )
    parser.add_argument("FILENAME")
    args = parser.parse_args()

    # Set up for logging output.
    LOGGER = logging.getLogger("H5plot_logger")
    if "--debug" in sys.argv:
        LOGGER.setLevel(logging.DEBUG)
    else:
        LOGGER.setLevel(logging.INFO)

    formatter = logging.Formatter(
        "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
    )
    LOGFILEH = logging.FileHandler("h5plot.log")
    LOGFILEH.setLevel(logging.DEBUG)
    LOGFILEH.setFormatter(formatter)
    LOGGER.addHandler(LOGFILEH)
    LOGSTREAM = logging.StreamHandler()
    LOGSTREAM.setLevel(logging.DEBUG)
    LOGSTREAM.setFormatter(formatter)
    LOGGER.addHandler(LOGSTREAM)

    H5FILE = lh5.h5parm(args.FILENAME, readonly=True)

    LOGGER.info("Successfully opened %s", args.FILENAME)

    SOLSETS = H5FILE.getSolsetNames()
    print("Found solset(s) " + ", ".join(SOLSETS))
    for solset in SOLSETS:
        print("SolTabs in " + solset + ":")
        ss = H5FILE.getSolset(solset)
        soltabs = ss.getSoltabNames()
        print("\t" + ", ".join(soltabs))

    from lofar_h5plot import main

    main(LOGGER, H5FILE)

    H5FILE.close()
    LOGGER.info("%s successfully closed.", args.FILENAME)


# rate fitting
# time-series analyses?
